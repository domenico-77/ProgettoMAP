/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package swing;

import DataBase.Db;
import Threads.ThreadMusica;
import Threads.ThreadTempo;
import com.mycompany.progettomap.giochi.Gioco;
import com.sun.glass.events.KeyEvent;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import logicaGioco.DescrizioneGioco;
import salvataggio.Deserializzazione;
import salvataggio.Serializzazione;

/**
 *
 * @author domen
 */
public class creaPartita extends javax.swing.JPanel {

    private mainSwing ms;

    /**
     * Creates new form creaPartita
     */
    public creaPartita(mainSwing ms) {
        initComponents();
        this.ms = ms;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        nomePartita = new javax.swing.JTextField();
        confermaNome = new javax.swing.JButton();
        indietro = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        muta = new javax.swing.JButton();
        smuta = new javax.swing.JButton();

        setBackground(new java.awt.Color(0, 0, 0));

        nomePartita.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        nomePartita.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                nomePartitaKeyPressed(evt);
            }
        });

        confermaNome.setBackground(new java.awt.Color(153, 255, 153));
        confermaNome.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        confermaNome.setText("CONFERMA");
        confermaNome.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                confermaNomeActionPerformed(evt);
            }
        });

        indietro.setBackground(new java.awt.Color(204, 0, 0));
        indietro.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        indietro.setText("INDIETRO");
        indietro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                indietroActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Inserire il nome della nuova partita...\n");

        muta.setBackground(new java.awt.Color(255, 204, 102));
        muta.setText("MUTE");
        muta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mutaActionPerformed(evt);
            }
        });

        smuta.setBackground(new java.awt.Color(255, 255, 102));
        smuta.setText("UNMUTE");
        smuta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                smutaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(39, 39, 39)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(nomePartita, javax.swing.GroupLayout.PREFERRED_SIZE, 658, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(31, 31, 31)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(indietro, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(confermaNome, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(muta)
                        .addGap(18, 18, 18)
                        .addComponent(smuta)))
                .addContainerGap(78, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(252, 252, 252)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(confermaNome, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(nomePartita, javax.swing.GroupLayout.DEFAULT_SIZE, 64, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 178, Short.MAX_VALUE)
                .addComponent(indietro, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(41, 41, 41)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(smuta, javax.swing.GroupLayout.DEFAULT_SIZE, 58, Short.MAX_VALUE)
                    .addComponent(muta, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void indietroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_indietroActionPerformed
        this.nomePartita.setText("");
        this.ms.getFrame().setContentPane(this.ms.getMenuInizio());
        this.ms.getFrame().validate();
    }//GEN-LAST:event_indietroActionPerformed

    public JTextField getNomePartita() {
        return nomePartita;
    }


    private void confermaNomeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_confermaNomeActionPerformed
        List<DescrizioneGioco> l = Deserializzazione.letturaFile();
        Db db = Db.getDb();
        boolean isExiting = false;
        String nome = this.nomePartita.getText();
        nome = nome.toLowerCase();
        if (nome.isEmpty()) {
            JOptionPane.showMessageDialog(this.ms.getFrame(), "Nome non valido", "Errore", JOptionPane.ERROR_MESSAGE);
            this.nomePartita.setText("");
        } else {
            for (DescrizioneGioco g : l) {
                if (g.getNomeGiocatore().equals(nome)) {
                    isExiting = true;
                }
            }
            if (isExiting) {
                JOptionPane.showMessageDialog(this.ms.getFrame(), "Nome non valido", "Errore", JOptionPane.ERROR_MESSAGE);
                this.nomePartita.setText("");
            } else {

                DescrizioneGioco partita = new Gioco(nome, db.inserisci(nome, 0, false, true));
                partita.inizializza();
                db.chiudiConnessione();
                try {
                    Serializzazione.scriviFile(partita);
                    this.ms.getGiocoGui().setPartita(partita);
                    this.ms.getGiocoGui().getVisualizzazioneTesto().setText("C’era una volta un samurai di nome Manji, egli era un samurai fedelissimo al suo credo e nella via della spada." + "\n"
                            + "Per molti anni ha lavorato per un padrone credendo che quello che faceva per lui fosse giusto," + "\n"
                            + "un giorno leggendo dei documenti scoprì che molte delle persone che aveva ucciso erano dei semplici cittadini." + "\n"
                            + "Il suo padrone era una persona molto avida che per arricchirsi aumentò di molto le tasse" + "\n"
                            + "e chiunque rifiutasse di pagarle veniva assassinato da Manji." + "\n"
                            + "Dopo la sconvolgente scoperta, Manji in cerca di redenzione dalle sue azioni decide di ribellarsi al suo padrone " + "\n"
                            + "cercando di liberare il territorio controllato da esso uccidendo quanti più samurai possibili in modo da arrivare \n ad ucciderlo.\n"
                            + "Manji uccise più di 100 sottoposti, ma in una battaglia venne sconfitto e catturato." + "\n"
                            + "Il padrone per vendetta decise di non ucciderlo ma di tenerlo in prigione nei sotteranei più profondi dove veniva \n continuamente torturato. " + "\n"
                            + "Per evitare che Manji scappasse, il suo vecchio padrone gli cavò entrambi gli occhi così da impedirgli di usare \n le sue abilità da samurai.\n"
                            + "La sua cella confinava con la cella di una ragazza di nome Rin, lei era una donna alle servitù del padrone." + "\n"
                            + "I soldati spesso lasciavano la cella di Rin aperta " + "\n"
                            + "in quanto credevano che essendo una donna non fosse capace di creare problemi in quanto non in grado di combattere. \n"
                            + "Manji era un samurai molto astuto , infatti," + "\n"
                            + "riuscì a capire che la cella era spesso lasciata aperta grazie ai discorsi delle guardie e ai mancati click delle \n mandate della serratura." + "\n"
                            + "Grazie alla sua astuzia riuscì a fare un accordo con Rin, " + "\n"
                            + "egli chiese di aiutarlo ad evadere facendogli da guida diventando il suo unico modo di vedere l’esterno," + "\n"
                            + "in cambio promise di riuscire a portarli entrambi fuori da quella prigione.\n"
                            + "Rin accetta l’ accordo e il giorno dopo al ritorno in cella riesce ad ammaliare una delle guardie rubandogli \n la chiave della cella di Manji." + "\n"
                            + "La notte stessa durante il cambio delle guardie riesce ad aprire la sua cella e da qui inizia \n 'LA GRANDE FUGA DALLA PRIGIONE'");
                    ThreadTempo.Time();
                    this.nomePartita.setText("");
                    this.ms.getFrame().setContentPane(this.ms.getGiocoGui());
                    this.ms.getGiocoGui().getComando().setText("");
                    this.ms.getFrame().validate();
                } catch (ClassNotFoundException ex) {
                    Logger.getLogger(Gioco.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }


    }//GEN-LAST:event_confermaNomeActionPerformed

    private void nomePartitaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_nomePartitaKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            List<DescrizioneGioco> l = Deserializzazione.letturaFile();
            Db db = Db.getDb();
            boolean isExiting = false;
            String nome = this.nomePartita.getText();
            nome = nome.toLowerCase();

            if (nome.isEmpty()) {
                JOptionPane.showMessageDialog(this.ms.getFrame(), "Nome non valido", "Errore", JOptionPane.ERROR_MESSAGE);
                this.nomePartita.setText("");
            } else {
                for (DescrizioneGioco g : l) {
                    if (g.getNomeGiocatore().equals(nome)) {
                        isExiting = true;
                    }
                }
                if (isExiting) {
                    JOptionPane.showMessageDialog(this.ms.getFrame(), "Nome non valido", "Errore", JOptionPane.ERROR_MESSAGE);
                    this.nomePartita.setText("");
                } else {
                    DescrizioneGioco partita = new Gioco(nome, db.inserisci(nome, 0, false, true));
                    partita.inizializza();
                    db.chiudiConnessione();
                    try {
                        Serializzazione.scriviFile(partita);
                        this.ms.getGiocoGui().setPartita(partita);
                        this.ms.getGiocoGui().getVisualizzazioneTesto().setText("C’era una volta un samurai di nome Manji, egli era un samurai fedelissimo al suo credo e nella via della spada." + "\n"
                                + "Per molti anni ha lavorato per un padrone credendo che quello che faceva per lui fosse giusto," + "\n"
                                + "un giorno leggendo dei documenti scoprì che molte delle persone che aveva ucciso erano dei semplici cittadini." + "\n"
                                + "Il suo padrone era una persona molto avida che per arricchirsi aumentò di molto le tasse" + "\n"
                                + "e chiunque rifiutasse di pagarle veniva assassinato da Manji." + "\n"
                                + "Dopo la sconvolgente scoperta, Manji in cerca di redenzione dalle sue azioni decide di ribellarsi al suo padrone " + "\n"
                                + "cercando di liberare il territorio controllato da esso uccidendo quanti più samurai possibili in modo da arrivare \n ad ucciderlo.\n"
                                + "Manji uccise più di 100 sottoposti, ma in una battaglia venne sconfitto e catturato." + "\n"
                                + "Il padrone per vendetta decise di non ucciderlo ma di tenerlo in prigione nei sotteranei più profondi dove veniva \n continuamente torturato. " + "\n"
                                + "Per evitare che Manji scappasse, il suo vecchio padrone gli cavò entrambi gli occhi così da impedirgli di usare \n le sue abilità da samurai.\n"
                                + "La sua cella confinava con la cella di una ragazza di nome Rin, lei era una donna alle servitù del padrone." + "\n"
                                + "I soldati spesso lasciavano la cella di Rin aperta " + "\n"
                                + "in quanto credevano che essendo una donna non fosse capace di creare problemi in quanto non in grado di combattere. \n"
                                + "Manji era un samurai molto astuto , infatti," + "\n"
                                + "riuscì a capire che la cella era spesso lasciata aperta grazie ai discorsi delle guardie e ai mancati click delle \n mandate della serratura." + "\n"
                                + "Grazie alla sua astuzia riuscì a fare un accordo con Rin, " + "\n"
                                + "egli chiese di aiutarlo ad evadere facendogli da guida diventando il suo unico modo di vedere l’esterno," + "\n"
                                + "in cambio promise di riuscire a portarli entrambi fuori da quella prigione.\n"
                                + "Rin accetta l’ accordo e il giorno dopo al ritorno in cella riesce ad ammaliare una delle guardie rubandogli \n la chiave della cella di Manji." + "\n"
                                + "La notte stessa durante il cambio delle guardie riesce ad aprire la sua cella e da qui inizia \n 'LA GRANDE FUGA DALLA PRIGIONE'");
                        ThreadTempo.Time();
                        this.nomePartita.setText("");
                        this.ms.getFrame().setContentPane(this.ms.getGiocoGui());
                        this.ms.getFrame().validate();
                    } catch (ClassNotFoundException ex) {
                        Logger.getLogger(Gioco.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }
            }
        }
    }//GEN-LAST:event_nomePartitaKeyPressed

    private void mutaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mutaActionPerformed
        ThreadMusica.setVolumeOff();
    }//GEN-LAST:event_mutaActionPerformed

    private void smutaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_smutaActionPerformed
        ThreadMusica.setVolumeOn();
    }//GEN-LAST:event_smutaActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton confermaNome;
    private javax.swing.JButton indietro;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JButton muta;
    private javax.swing.JTextField nomePartita;
    private javax.swing.JButton smuta;
    // End of variables declaration//GEN-END:variables
}
